
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  role: 'role',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  phone: 'phone',
  address: 'address',
  website: 'website',
  bio: 'bio',
  sector: 'sector',
  avatar_url: 'avatar_url',
  default_currency: 'default_currency',
  rating_avg: 'rating_avg',
  instagram_url: 'instagram_url',
  tiktok_url: 'tiktok_url',
  facebook_url: 'facebook_url',
  snapchat_url: 'snapchat_url',
  primary_platform: 'primary_platform',
  followers_count: 'followers_count',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.CampaignScalarFieldEnum = {
  id: 'id',
  owner_user_id: 'owner_user_id',
  name: 'name',
  brand_name: 'brand_name',
  description: 'description',
  revenue_amount: 'revenue_amount',
  revenue_currency: 'revenue_currency',
  start_date: 'start_date',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.CampaignPlatformScalarFieldEnum = {
  campaign_id: 'campaign_id',
  platform: 'platform',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CollaboratorScalarFieldEnum = {
  id: 'id',
  campaign_id: 'campaign_id',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  agreed_amount: 'agreed_amount',
  currency: 'currency',
  ad_status: 'ad_status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  user_a_id: 'user_a_id',
  user_b_id: 'user_b_id',
  last_message_at: 'last_message_at',
  unread_a: 'unread_a',
  unread_b: 'unread_b',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  sender_id: 'sender_id',
  content: 'content',
  attachment_id: 'attachment_id',
  created_at: 'created_at',
  read_at: 'read_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  file_name: 'file_name',
  mime_type: 'mime_type',
  size: 'size',
  storage_url: 'storage_url',
  created_at: 'created_at'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  campaign_id: 'campaign_id',
  rater_user_id: 'rater_user_id',
  ratee_user_id: 'ratee_user_id',
  score: 'score',
  comment: 'comment',
  created_at: 'created_at'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action',
  entity: 'entity',
  entity_id: 'entity_id',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  brand: 'brand',
  influencer: 'influencer'
};

exports.CampaignStatus = exports.$Enums.CampaignStatus = {
  active: 'active',
  closed: 'closed'
};

exports.CollaboratorStatus = exports.$Enums.CollaboratorStatus = {
  Active: 'Active',
  Terminée: 'Terminée'
};

exports.PlatformName = exports.$Enums.PlatformName = {
  Instagram: 'Instagram',
  TikTok: 'TikTok',
  YouTube: 'YouTube',
  Facebook: 'Facebook',
  Snapchat: 'Snapchat'
};

exports.Prisma.ModelName = {
  User: 'User',
  Campaign: 'Campaign',
  CampaignPlatform: 'CampaignPlatform',
  Collaborator: 'Collaborator',
  Conversation: 'Conversation',
  Message: 'Message',
  Attachment: 'Attachment',
  Rating: 'Rating',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/benghali/Downloads/rork-collablink/backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/benghali/Downloads/rork-collablink/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  brand\n  influencer\n}\n\nenum CampaignStatus {\n  active\n  closed\n}\n\nenum CollaboratorStatus {\n  Active\n  Terminée\n}\n\nenum PlatformName {\n  Instagram\n  TikTok\n  YouTube\n  Facebook\n  Snapchat\n}\n\nmodel User {\n  id               String        @id\n  role             UserRole\n  name             String\n  email            String        @unique\n  password_hash    String\n  phone            String?\n  address          String?\n  website          String?\n  bio              String?\n  sector           String?\n  avatar_url       String?\n  default_currency String?\n  rating_avg       Float?\n  instagram_url    String?\n  tiktok_url       String?\n  facebook_url     String?\n  snapchat_url     String?\n  primary_platform PlatformName?\n  followers_count  Int?\n  created_at       DateTime\n  updated_at       DateTime\n  deleted_at       DateTime?\n\n  // campaigns this user owns\n  campaigns_owned Campaign[] @relation(\"CampaignOwner\")\n\n  // messages they sent\n  messages_sent Message[] @relation(\"MessageSender\")\n\n  // ratings they gave / received\n  ratings_given    Rating[] @relation(\"RatingByUser\")\n  ratings_received Rating[] @relation(\"RatingToUser\")\n\n  // audit logs\n  audit_logs AuditLog[] @relation(\"UserAuditLogs\")\n\n  // conversations (as user_a / user_b)\n  conversationsAsA Conversation[] @relation(\"ConversationUserA\")\n  conversationsAsB Conversation[] @relation(\"ConversationUserB\")\n}\n\nmodel Campaign {\n  id               String         @id\n  owner_user_id    String\n  name             String\n  brand_name       String\n  description      String\n  revenue_amount   Float\n  revenue_currency String\n  start_date       String?\n  status           CampaignStatus\n  created_at       DateTime\n  updated_at       DateTime\n  deleted_at       DateTime?\n\n  owner         User               @relation(\"CampaignOwner\", fields: [owner_user_id], references: [id], onDelete: Cascade)\n  platforms     CampaignPlatform[]\n  collaborators Collaborator[]\n  ratings       Rating[]\n}\n\nmodel CampaignPlatform {\n  campaign_id String\n  platform    PlatformName\n  created_at  DateTime\n  updated_at  DateTime\n\n  campaign Campaign @relation(fields: [campaign_id], references: [id], onDelete: Cascade)\n\n  @@id([campaign_id, platform])\n}\n\nmodel Collaborator {\n  id            String             @id\n  campaign_id   String\n  first_name    String\n  last_name     String\n  phone         String?\n  agreed_amount Float\n  currency      String\n  ad_status     CollaboratorStatus\n  created_at    DateTime\n  updated_at    DateTime\n  deleted_at    DateTime?\n\n  campaign Campaign @relation(fields: [campaign_id], references: [id], onDelete: Cascade)\n}\n\nmodel Conversation {\n  id              String    @id\n  user_a_id       String\n  user_b_id       String\n  last_message_at DateTime?\n  unread_a        Int?\n  unread_b        Int?\n  created_at      DateTime\n  updated_at      DateTime\n  deleted_at      DateTime?\n\n  // link to each participant\n  userA User @relation(\"ConversationUserA\", fields: [user_a_id], references: [id], onDelete: Cascade)\n  userB User @relation(\"ConversationUserB\", fields: [user_b_id], references: [id], onDelete: Cascade)\n\n  messages Message[]\n}\n\nmodel Message {\n  id              String    @id\n  conversation_id String\n  sender_id       String\n  content         String\n  attachment_id   String?   @unique\n  created_at      DateTime\n  read_at         DateTime?\n  deleted_at      DateTime?\n\n  conversation Conversation @relation(fields: [conversation_id], references: [id], onDelete: Cascade)\n  sender       User         @relation(\"MessageSender\", fields: [sender_id], references: [id], onDelete: Cascade)\n\n  // 1-to-1 optional attachment\n  attachment Attachment? @relation(fields: [attachment_id], references: [id])\n}\n\nmodel Attachment {\n  id          String   @id\n  file_name   String\n  mime_type   String\n  size        Int\n  storage_url String\n  created_at  DateTime\n\n  // reverse of Message.attachment\n  message Message?\n}\n\nmodel Rating {\n  id            String   @id\n  campaign_id   String\n  rater_user_id String\n  ratee_user_id String\n  score         Int\n  comment       String?\n  created_at    DateTime\n\n  campaign Campaign @relation(fields: [campaign_id], references: [id], onDelete: Cascade)\n  rater    User     @relation(\"RatingByUser\", fields: [rater_user_id], references: [id], onDelete: Cascade)\n  ratee    User     @relation(\"RatingToUser\", fields: [ratee_user_id], references: [id], onDelete: Cascade)\n}\n\nmodel AuditLog {\n  id         String   @id\n  user_id    String\n  action     String\n  entity     String\n  entity_id  String\n  created_at DateTime\n\n  user User @relation(\"UserAuditLogs\", fields: [user_id], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "2b66a12ff57d1527c1bb1e3009cea85626f49f2d1700f3fcac28baefdd6fda82",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"default_currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating_avg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"instagram_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tiktok_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebook_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"snapchat_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primary_platform\",\"kind\":\"enum\",\"type\":\"PlatformName\"},{\"name\":\"followers_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"campaigns_owned\",\"kind\":\"object\",\"type\":\"Campaign\",\"relationName\":\"CampaignOwner\"},{\"name\":\"messages_sent\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageSender\"},{\"name\":\"ratings_given\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingByUser\"},{\"name\":\"ratings_received\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToUser\"},{\"name\":\"audit_logs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"UserAuditLogs\"},{\"name\":\"conversationsAsA\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationUserA\"},{\"name\":\"conversationsAsB\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationUserB\"}],\"dbName\":null},\"Campaign\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner_user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revenue_amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"revenue_currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CampaignStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CampaignOwner\"},{\"name\":\"platforms\",\"kind\":\"object\",\"type\":\"CampaignPlatform\",\"relationName\":\"CampaignToCampaignPlatform\"},{\"name\":\"collaborators\",\"kind\":\"object\",\"type\":\"Collaborator\",\"relationName\":\"CampaignToCollaborator\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"CampaignToRating\"}],\"dbName\":null},\"CampaignPlatform\":{\"fields\":[{\"name\":\"campaign_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"enum\",\"type\":\"PlatformName\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"campaign\",\"kind\":\"object\",\"type\":\"Campaign\",\"relationName\":\"CampaignToCampaignPlatform\"}],\"dbName\":null},\"Collaborator\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"campaign_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agreed_amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ad_status\",\"kind\":\"enum\",\"type\":\"CollaboratorStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"campaign\",\"kind\":\"object\",\"type\":\"Campaign\",\"relationName\":\"CampaignToCollaborator\"}],\"dbName\":null},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_a_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_b_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_message_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unread_a\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unread_b\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userA\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationUserA\"},{\"name\":\"userB\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationUserB\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachment_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"read_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageSender\"},{\"name\":\"attachment\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToMessage\"}],\"dbName\":null},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mime_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storage_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"AttachmentToMessage\"}],\"dbName\":null},\"Rating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"campaign_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rater_user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ratee_user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"campaign\",\"kind\":\"object\",\"type\":\"Campaign\",\"relationName\":\"CampaignToRating\"},{\"name\":\"rater\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RatingByUser\"},{\"name\":\"ratee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RatingToUser\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAuditLogs\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

